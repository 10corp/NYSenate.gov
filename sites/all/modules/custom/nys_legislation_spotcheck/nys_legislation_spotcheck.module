<?php

module_load_include('inc', 'nys_legislation_spotcheck');


function nys_legislation_spotcheck_handle_spotcheck_dump($content_type, $year) {
  $querier = nys_legislation_spotcheck_get_dump_querier($content_type);

  if ($querier->isSessionBased()) {
    $year = nys_legislation_spotcheck_get_session_year($year);
  }

  $limit = 100;
  $total = $querier->getDumpTotalCount($year);
  $timestamp = time();
  $ref_date_time = date('Y-m-d', $timestamp) . "T" . date('H:i:s', $timestamp);

  echo "Found $total $content_type nodes for $year.\n";

  for ($offset = 0; $offset < $total; $offset += $limit) {

    echo "Retrieving $year $content_type nodes " .
      ($offset + 1) . " - " . (($offset + $limit < $total) ? $offset + $limit : $total) . "\n";

    $nids = $querier->getNids($year, $limit, $offset);

    $nodes = node_load_multiple($nids, [], TRUE);

    $querier->prepareNodes($nodes);

    $dump_object = nys_legislation_spotcheck_package_dump(
      $content_type, $ref_date_time, $year, $total, $limit, $offset, $nodes);

    nys_legislation_spotcheck_send_dump($dump_object);
  }
}

function nys_legislation_spotcheck_package_dump($content_type, $ref_date_time, $year,
                                                $total, $limit, $offset, $nodes) {
  return [
    'contentType' => $content_type,
    'refDateTime' => $ref_date_time,
    'year' => $year,
    'part' => 1 + $offset / $limit,
    'totalParts' => ceil($total / $limit),
    'nodes' => $nodes,
  ];
}

function nys_legislation_spotcheck_send_dump($dump_data) {
  $ol_base_url = variable_get("openleg_base_url");
  $openleg_key = variable_get("openleg_key");
  $qa_url = $ol_base_url . '/api/3/senatesite/dump?key=' . $openleg_key;
  $data = json_encode($dump_data, JSON_UNESCAPED_UNICODE);

  echo "\n[POST] ${qa_url}\n";

  $curl = curl_init($qa_url);
  curl_setopt($curl, CURLOPT_HEADER, 1);
  curl_setopt($curl, CURLOPT_RETURNTRANSFER, TRUE);
  curl_setopt($curl, CURLOPT_HTTPHEADER, ["Content-type: application/json; charset=UTF-8"]);
  curl_setopt($curl, CURLOPT_POST, TRUE);
  curl_setopt($curl, CURLOPT_POSTFIELDS, $data);

  $json_response = curl_exec($curl);
  $status = curl_getinfo($curl, CURLINFO_HTTP_CODE);

  if ($status != 200 && $status != 201) {
    die("\nError: call to URL $qa_url failed with status $status, response $json_response, " .
      "curl_error " . curl_error($curl) . ", curl_errno " . curl_errno($curl));
  }
  else {
    echo "\nStatus Code: ${status}\n";
    echo "\nResponse: ${json_response}";
  }
  curl_close($curl);
}
