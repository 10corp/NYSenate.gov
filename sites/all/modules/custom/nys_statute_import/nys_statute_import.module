<?php

/**
 * @file
 * File nyc_statute_import.module.
 */

define("NYS_STATUTE_IMPORT_BASE_PATH", "/legislation/laws/");
define("NYS_STATUTE_IMPORT_SET_SUGGESTED_PATH", FALSE);
define("NYS_STATUTE_IMPORT_SET_PATH", TRUE);
define("NYS_STATUTE_IMPORT_SLEEP_MICROSECONDS", 100000);

/*
 * Import All Statutes.
 */

/**
 * Implements the drush import-all-statutes command.
 *
 * $arg1 - a lawId like ABB || a statuteId like ABB-215
 */
function nys_statute_import_import_all_statutes($arg1) {
  module_load_include('inc', 'nys_statute_import', 'nys_statute_import');
  drupal_set_time_limit(20000);

  if (empty($arg1) == TRUE) {

    // Iterate thru all law_id's.
    $law_listings = nys_statute_import_get_law_listings();

    foreach ($law_listings as $law_id => $law_listing) {

      nys_statute_import_process_statutes($law_id, 'IMPORT-ALL');

    }

  }
  else {
    if (strlen($arg1) == 3) {

      nys_statute_import_process_statutes($arg1, 'IMPORT-SOME');
    }
    elseif (strpos($arg1, NYS_STATUTE_STATUTE_ID_DELIMITER) != FALSE) {

      $arg_array = explode(NYS_STATUTE_STATUTE_ID_DELIMITER, $arg1);
      if (count($arg_array) == 2 && is_numeric($arg_array[1]) == TRUE) {
        nys_statute_import_process_a_statute($arg_array[0], $arg_array[1], 'IMPORT-ONE');

      }

    }

  }

}

/**
 * Implements the drush restart-import-all-statutes command.
 *
 * $arg1 - a lawId like ABB .
 */
function nys_statute_import_restart_import_all_statutes($arg1) {
  module_load_include('inc', 'nys_statute_import', 'nys_statute_import');
  drupal_set_time_limit(20000);

  if (empty($arg1) == TRUE) {
    $law_id_arg = variable_get('nys_statute_import_process_statutes', '');

    if (empty($law_id_arg) == TRUE) {
      print "Since a previous run was not detected. A lawID argument is required. Example:ABP";
      return;
    }
  }
  else {
    $law_id_arg = $arg1;
  }

  if (strlen($law_id_arg) == 3) {
    $found_law_id = FALSE;

    // Iterate thru all law_id's.
    $law_listings = nys_statute_import_get_law_listings();

    foreach ($law_listings as $law_id => $law_listing) {
      if (strcasecmp($law_id, $law_id_arg) == 0) {
        $found_law_id = TRUE;
        print "IMPORT-ALL RESUMED PROCESSING AT LAW-ID $law_id  \r\n";
      }
      if ($found_law_id == TRUE) {
        nys_statute_import_process_statutes($law_id, 'IMPORT-ALL');
      }

    }

  }

}

/**
 * Implements the drush describe-import-all-statutes command.
 *
 * $arg1 - a lawId like ABB.
 */
function nys_statute_import_describe_import_all_statutes($arg1) {
  module_load_include('inc', 'nys_statute_import', 'nys_statute_import');
  drupal_set_time_limit(20000);

  $drush_alias = variable_get('nys_statute_import_drush_alias', '');
  if (empty($drush_alias) == TRUE) {
    print "\r\n\r\nTHE DRUSH ALIAS FOR describe- COMMANDS IS EMPTY ! To set it.\r\n";
    print "drush vset nys_statute_import_drush_alias [sites drush alias heres] \r\n\r\n\r\n";
  }
  else {
    $drush_alias = '@' . $drush_alias;
  }

  if (empty($arg1) == FALSE && strlen($arg1) == 3) {
    $found_law_id = FALSE;
  }
  else {
    $found_law_id = TRUE;
  }

  // Iterate thru all law_id's.
  $law_listings = nys_statute_import_get_law_listings();

  foreach ($law_listings as $law_id => $law_listing) {
    if (strcasecmp($law_id, $arg1) == 0) {
      $found_law_id = TRUE;
    }
    if ($found_law_id == TRUE) {
      print "drush $drush_alias import-all-statutes $law_id -y\r\n";
    }

  }

}

/*
 * Update All Statutes.
 */

/**
 * Implements the drush update-all-statutes command.
 */
function nys_statute_import_update_all_statutes($arg1) {
  module_load_include('inc', 'nys_statute_import', 'nys_statute_import');
  drupal_set_time_limit(20000);

  if (empty($arg1) == TRUE) {
    // Iterate thru all law_id's.
    $law_listings = nys_statute_import_get_law_listings();
    foreach ($law_listings as $law_id => $law_listing) {
      nys_statute_import_process_statutes($law_id, 'UPDATE-ALL');
    }
  }
  else {

    if (strlen($arg1) == 3) {
      nys_statute_import_process_statutes($arg1, 'UPDATE-SOME');
    }
    elseif (strpos($arg1, NYS_STATUTE_STATUTE_ID_DELIMITER) != FALSE) {
      $arg_array = explode(NYS_STATUTE_STATUTE_ID_DELIMITER, $arg1);
      if (count($arg_array) == 2 && is_numeric($arg_array[1]) == TRUE) {
        nys_statute_import_process_a_statute($arg_array[0], $arg_array[1], 'UPDATE-ONE');
      }

    }

  }

}

/**
 * Implements the drush restart-update-all-statutes command.
 *
 * $arg1 - a lawId like ABB.
 */
function nys_statute_import_restart_update_all_statutes($arg1) {
  module_load_include('inc', 'nys_statute_import', 'nys_statute_import');
  drupal_set_time_limit(20000);

  if (empty($arg1) == TRUE) {
    $law_id_arg = variable_get('nys_statute_import_process_statutes', '');

    if (empty($law_id_arg) == TRUE) {
      print "Since a previous run was not detected. A lawID argument is required. Example:ABP";
      return;
    }
  }
  else {
    $law_id_arg = $arg1;
  }

  if (strlen($law_id_arg) == 3) {
    $found_law_id = FALSE;

    // Iterate thru all law_id's.
    $law_listings = nys_statute_import_get_law_listings();

    foreach ($law_listings as $law_id => $law_listing) {

      if (strcasecmp($law_id, $law_id_arg) == 0) {
        $found_law_id = TRUE;
        print "UPDATE-ALL RESUMED PROCESSING AT LAW-ID $law_id  \r\n";
      }

      if ($found_law_id == TRUE) {
        nys_statute_import_process_statutes($law_id, 'UPDATE-ALL');
      }

    }

  }

}

/**
 * Implements the drush describe-update-all-statutes command.
 *
 * $arg1 - a lawId like ABB.
 */
function nys_statute_import_describe_update_all_statutes($arg1) {
  module_load_include('inc', 'nys_statute_import', 'nys_statute_import');
  drupal_set_time_limit(20000);

  $drush_alias = variable_get('nys_statute_import_drush_alias', '');
  if (empty($drush_alias) == TRUE) {
    print "\r\n\r\nTHE DRUSH ALIAS FOR describe- COMMANDS IS EMPTY ! To set it.\r\n";
    print "drush vset nys_statute_import_drush_alias [sites drush alias heres]  \r\n\r\n\r\n";
  }
  else {
    $drush_alias = '@' . $drush_alias;
  }

  if (empty($arg1) == FALSE && strlen($arg1) == 3) {
    $found_law_id = FALSE;
  }
  else {
    $found_law_id = TRUE;
  }

  // Iterate thru all law_id's.
  $law_listings = nys_statute_import_get_law_listings();

  foreach ($law_listings as $law_id => $law_listing) {
    if (strcasecmp($law_id, $arg1) == 0) {
      $found_law_id = TRUE;
    }

    if ($found_law_id == TRUE) {
      print "drush $drush_alias update-all-statutes $law_id -y\r\n";
    }

  }

}

/*
 * Audit All Statutes.
 */

/**
 * Implements the drush audit-all-statutes command.
 */
function nys_statute_import_audit_all_statutes($arg1) {

  module_load_include('inc', 'nys_statute_import', 'nys_statute_import');
  drupal_set_time_limit(20000);

  if (empty($arg1) == TRUE) {

    // Iterate thru all law_id's.
    $law_listings = nys_statute_import_get_law_listings();
    foreach ($law_listings as $law_id => $law_listing) {

      // Print print "AUDIT ALL - PROCESSING law_id $law_id \r\n";.
      print "lawId,Article,docType,location_id,statuteId,nid,STATUS\r\n";
      nys_statute_import_process_statutes($law_id, 'AUDIT-ALL');

    }

  }
  else {

    if (strlen($arg1) == 3) {
      nys_statute_import_process_statutes($arg1, 'AUDIT-SOME');
    }
    elseif (strpos($arg1, NYS_STATUTE_STATUTE_ID_DELIMITER) != FALSE) {

      $arg_array = explode(NYS_STATUTE_STATUTE_ID_DELIMITER, $arg1);
      if (count($arg_array) == 2 && is_numeric($arg_array[1]) == TRUE) {

        print "lawId,Article,docType,location_id,statuteId,nid,STATUS\r\n";
        nys_statute_import_process_a_statute($arg_array[0], $arg_array[1], 'AUDIT-SOME');

      }

    }

  }

}

/**
 * Implements the drush restart-audit-all-statutes command.
 *
 * $arg1 - a lawId like ABB.
 */
function nys_statute_import_restart_audit_all_statutes($arg1) {

  module_load_include('inc', 'nys_statute_import', 'nys_statute_import');
  drupal_set_time_limit(20000);

  if (empty($arg1) == TRUE) {

    $law_id_arg = variable_get('nys_statute_import_process_statutes', '');

    if (empty($law_id_arg) == TRUE) {
      print "Since a previous run was not detected. A lawID argument is required. Example:ABP";
      return;
    }
  }
  else {

    $law_id_arg = $arg1;
  }

  if (strlen($law_id_arg) == 3) {

    $found_law_id = FALSE;

    // Iterate thru all law_id's.
    $law_listings = nys_statute_import_get_law_listings();

    foreach ($law_listings as $law_id => $law_listing) {
      if (strcasecmp($law_id, $law_id_arg) == 0) {
        $found_law_id = TRUE;
        // Skip for clean csv.
        // Print print "AUDIT-ALL RESUMED PROCESSING AT LAW-ID $law_id \r\n";.
      }

      if ($found_law_id == TRUE) {

        nys_statute_import_process_statutes($law_id, 'AUDIT-ALL');
      }

    }

  }

}

/**
 * Implements the drush describe-audit-all-statutes command.
 *
 * $arg1 - a lawId like ABB.
 */
function nys_statute_import_audit_describe_all_statutes($arg1) {
  module_load_include('inc', 'nys_statute_import', 'nys_statute_import');
  drupal_set_time_limit(20000);

  $drush_alias = variable_get('nys_statute_import_drush_alias', '');
  if (empty($drush_alias) == TRUE) {
    print "\r\n\r\nTHE DRUSH ALIAS FOR describe- COMMANDS IS EMPTY ! To set it.\r\n";
    print "drush vset nys_statute_import_drush_alias [sites drush alias heres]  \r\n\r\n\r\n";
  }
  else {
    $drush_alias = '@' . $drush_alias;
  }

  if (empty($arg1) == FALSE && strlen($arg1) == 3) {
    $found_law_id = FALSE;
  }
  else {
    $found_law_id = TRUE;
  }

  // Iterate thru all law_id's.
  $law_listings = nys_statute_import_get_law_listings();

  foreach ($law_listings as $law_id => $law_listing) {
    if (strcasecmp($law_id, $arg1) == 0) {
      $found_law_id = TRUE;
    }

    if ($found_law_id == TRUE) {
      print "drush $drush_alias audit-all-statutes $law_id -y\r\n";
    }

  }

}

/*
 * Update a Range of Statutes.
 */

/**
 * Implements the drush update-range-statutes  command.
 */
function nys_statute_import_update_range_statutes($arg1) {
  module_load_include('inc', 'nys_statute_import', 'nys_statute_import');
  drupal_set_time_limit(20000);

  if (empty($arg1) == TRUE) {

    // Get the last run timestamp its going to be used in the inner part.
    $last_update = variable_get("statute_import_last_update", "2000-01-01T00:00:00");
    $run_start_time = date('Y-m-d\TH:i:s', time());

    // Iterate thru all law_id's.
    $law_listings = nys_statute_import_get_law_listings();
    foreach ($law_listings as $law_id => $law_listing) {
      print "UPDATE RANGE - PROCESSING LAW-ID $law_id  \r\n";

      nys_statute_import_process_update_range_statutes($law_id, $last_update, $run_start_time, $run_type);

    }

    // If the run was sucessful.
    // RESET the last_update variable with $run_start_time.
    variable_set("statute_import_last_update", $run_start_time);

  }
  else {
    $options_array = explode('/', $arg1);
    $options_count = count($options_array);

    if ($options_count == 5) {
      $law_id = $options_array[1];
      $fromDateTime = $options_array[2];
      $toDateTime = $options_array[3];
      $run_type = '';

      print "UPDATE RANGE - PROCESSING $arg1 \r\n";

      nys_statute_import_process_update_range_statutes($law_id, $fromDateTime, $toDateTime, 'IMPORT-ONE'); //'UPDATE-RANGE');

    }
    else {
      print "AN ARGUMENT WAS PASSED BUT WAS NOT FORMATTED CORRECTLY. EXAMPLE /ABP/2015-01-01T00:00:00/2016-01-01T00:00:00/";
    }

  }

}

/**
 * Implements the drush clear-all-statutes  command.
 */
function nys_statute_import_clear_all_statutes($arg1) {
  drupal_set_time_limit(20000);

  $result = db_query("SELECT `nid` FROM `node` WHERE `type` = 'statute';");

  $count = 0;

  foreach ($result as $record) {
    $nid = $record->nid;
    node_delete($nid);
    print "Removing Node - $nid \r\n";
    $count++;
  }

  print "-------------------------------\r\n";
  print "Deleted $count Statute Nodes.\r\n";

}

/**
 * Implements the drush currently-processing-law-id  command.
 */
function nys_statute_import_currently_processing_law_id($arg1) {
  $law_id = variable_get('nys_statute_import_process_statutes', '');

  if (empty($arg1) == TRUE) {
    if (empty($law_id) == FALSE) {
      print $law_id;
    }
    else {
      // Print print "OK";.
    }
  }
  else {
    // Print print "HUMAN READABLE";.
    if (empty($law_id) == FALSE) {
      // Print the.
      print "\r\n\r\nLAST PROCESSING $law_id \r\n";
      print "drush vget nys_statute_import_process_statutes = $law_id \r\n\r\n";
      $drush_alias = variable_get('nys_statute_import_drush_alias', '');
      if (empty($drush_alias) == FALSE) {
        print "DRUSH ALIAS FOR describe- COMMANDS IS SET TO $law_id \r\n";
        print "drush vget nys_statute_import_drush_alias = $drush_alias \r\n";
      }
      else {
        print "THE DRUSH ALIAS FOR describe- COMMANDS IS EMPTY ! To set it.\r\n";
        print "drush vset nys_statute_import_drush_alias [sites drush alias heres] \r\n";
      }

    }
    else {
      print "THE LAST OPERATION WAS SUCESSFUL. LAST PROCESSING IS EMPTY. \r\n";
    }

  }

}
